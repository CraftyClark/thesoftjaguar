<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The soft jaguar</title><link href="http://thesoftjaguar.com/" rel="alternate"></link><link href="http://thesoftjaguar.com/feeds/conferences.atom.xml" rel="self"></link><id>http://thesoftjaguar.com/</id><updated>2013-03-08T20:02:00+01:00</updated><entry><title>FOSDEM 2013, it is more than beer</title><link href="http://thesoftjaguar.com/posts/2013/03/08/fosdem-2013/" rel="alternate"></link><updated>2013-03-08T20:02:00+01:00</updated><author><name>Dario Blanco</name></author><id>tag:thesoftjaguar.com,2013-03-08:posts/2013/03/08/fosdem-2013/</id><summary type="html">&lt;p&gt;After my long blog hibernation, I wanted to write about &lt;em&gt;FOSDEM 2013&lt;/em&gt;, which took place in Brussels on February 2nd and 3rd, and it wasn't only for drinking beer. OK, you got me, the beer is always a motivating factor.&lt;/p&gt;
&lt;p&gt;&lt;img alt="We share a dark past" src="http://i.imgur.com/Il4kdf4.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;The Virtualization alternative&lt;/h2&gt;
&lt;p&gt;The first day I was lost, the classrooms were really crowded, and I missed the Configuration Systems Management talk because, for "security purposes", nobody else could enter in the room. There is always a B Plan, so I attended some &lt;em&gt;Xen&lt;/em&gt; talks about security using &lt;em&gt;Pygrub&lt;/em&gt; and fixed kernels, explaining different attacks that can be performed to our virtual machines, some security practices like PV VMs or the Xen Security Module, and how to virtualizate in CentOS 6. It was nice to hear about all of this, because I am not really advanced in that issue.&lt;/p&gt;
&lt;h2&gt;We should cook: Configuration Systems Management&lt;/h2&gt;
&lt;p&gt;However, Saturday afternoon was the Configuration Systems Management time. At that moment, I was aware of the overcrowding problem, so I arrived to the classroom 30 minutes earlier, and I spent the rest of the day there. From all the talks, I highlight these:&lt;/p&gt;
&lt;h3&gt;Learning to Automate&lt;/h3&gt;
&lt;p&gt;This was a continuation of what I missed that morning, but the people were explaining their knowledge about certain &lt;em&gt;DevOps&lt;/em&gt; practices, their experience with &lt;em&gt;Chef&lt;/em&gt; and &lt;em&gt;Puppet&lt;/em&gt; and how difficult can be sometimes. It was focused in how to debug your &lt;em&gt;Chef&lt;/em&gt; cookbooks, introducing other projects like &lt;a href="http://acrmp.github.com/foodcritic/"&gt;Foodcritic&lt;/a&gt; and &lt;a href="https://github.com/opscode/test-kitchen"&gt;test-kitchen&lt;/a&gt;. Of course, &lt;a href="http://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; was the recommended method for testing your young cookbooks.&lt;/p&gt;
&lt;p&gt;&lt;img alt="We need a layered approach to Systems Management" src="http://i.imgur.com/bvFEbyM.jpg" /&gt;&lt;/p&gt;
&lt;h3&gt;Using Ruby frameworks to bring sanity to your infrastructure&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Vagrant&lt;/em&gt; was over and over again, because it is a really interesting way of creating a development environment, so I wasn't surprised about how insistent they were about its use. But the main point here was that they explained some Ruby frameworks, and more important: their thoughts about each of them. I am not a Ruby expert so it was nice to know that &lt;em&gt;Cucumber&lt;/em&gt; was not recommended at all, that &lt;em&gt;Rspec&lt;/em&gt; have &lt;em&gt;Chefspec&lt;/em&gt; and &lt;em&gt;Rspec-Puppet&lt;/em&gt; as reference in this world, and a brief introduction to &lt;em&gt;Minitest&lt;/em&gt; never hurts.&lt;/p&gt;
&lt;p&gt;However, this talk was for explaining the &lt;em&gt;Test-Kitchen&lt;/em&gt; project: useful for testing cookbooks across different operating systems, and capable of running the tests in Virtualbox or Openstack. Then you realize how complicated the testing of Configuration Management Systems can be, but possible after all.&lt;/p&gt;
&lt;p&gt;Besides all of this, other libraries were meant, like &lt;em&gt;Celulloid&lt;/em&gt;, &lt;em&gt;Bats&lt;/em&gt; (Bash automated testing system), &lt;em&gt;Chef-Workflow&lt;/em&gt;, &lt;em&gt;Berkshelf&lt;/em&gt;, &lt;em&gt;Apache Mesos&lt;/em&gt;, &lt;em&gt;Faraday&lt;/em&gt;, &lt;em&gt;Sinatra&lt;/em&gt;, &lt;em&gt;Rspec-dns&lt;/em&gt;, &lt;em&gt;Ruby-dns&lt;/em&gt; and more... That was all the libraryfest for the day.&lt;/p&gt;
&lt;h3&gt;VeeWee&lt;/h3&gt;
&lt;p&gt;I enjoyed this one because it was a surprise talk (though I didn't love why it became a surprise). It was awesome to know more about the &lt;a href="https://github.com/jedi4ever/veewee"&gt;VeeWee&lt;/a&gt; project and I definitely recommend it if you want to create almost any virtual machine in a really easy way.&lt;/p&gt;
&lt;p&gt;&lt;img alt="One does not simply choose the right kind of beer" src="http://i.imgur.com/Xrv3xC0.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;It's Python time&lt;/h2&gt;
&lt;p&gt;Sunday was the Python day, an overcrowded room as on Saturday but I could manage to pick a nice seat. The first talk was &lt;em&gt;Astonishing Python tricks&lt;/em&gt;, a short one but explaining some Python particularities and putting together several Python patterns that the community have been using. Besides this, there are other talks that I want to highlight:&lt;/p&gt;
&lt;h3&gt;Gaffer - Application deployment, monitoring and supervision made simple&lt;/h3&gt;
&lt;p&gt;I was skeptic about &lt;a href="http://gaffer.readthedocs.org/"&gt;Gaffer&lt;/a&gt;, but I am going to give it a try. At first I thought that it was like a distributed supervisor but it is more than that. I can think in a lot of uses for a company environment, and I am planning an open source project using this library.&lt;/p&gt;
&lt;h3&gt;Plone, the best python-based CMS&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://plone.org/"&gt;Plone&lt;/a&gt; seems a really mature Python CMS. The security was his strongest point (and Python :P) but the weakest one was the deployment (as expected). If you really want to deploy even the most basic application, and you are not familiar to the basic concepts (and some other not as basics), is going to be difficult. They acknowledged those problems, but I have to say that as a CMS solution seems a really interesting one, if you can overcome the drawbacks. In my case, I am a control maniac, so that's why I prefer microframeworks like &lt;em&gt;Flask&lt;/em&gt;, other not as micro as &lt;em&gt;Django&lt;/em&gt;, and I intend to flee from CMS, though sometimes are really useful for certain situations.&lt;/p&gt;
&lt;h3&gt;TDD from scratch&lt;/h3&gt;
&lt;p&gt;We love &lt;em&gt;Test Driven Development&lt;/em&gt;, and if not, you should. Sometimes is hard, really hard, to program the test, because we are lazy. But then, with the experience, you realize that if we would have programmed a test at first, everything would have been easier. This talk addressed all the benefits of that philosophy change, and what tools we can use for easing the process.&lt;/p&gt;
&lt;h3&gt;Vaurien the Chaos TCP Proxy&lt;/h3&gt;
&lt;p&gt;Based on Netflix Chaos Monkey project, &lt;a href="http://vaurien.readthedocs.org/"&gt;Vaurien&lt;/a&gt; seems an useful way for testing distributed systems (and yeah, distributed systems need a lot of testing). Having a proxy between your code and any other system, in which you can put different protocols and behaviors, seems a really good approach for it. I am currently doing some testing actions with mock, and I think that &lt;em&gt;Vaurien&lt;/em&gt; could solve them easily , so giving this project a try wouldn't be a bad idea.&lt;/p&gt;
&lt;h3&gt;Python for Humans&lt;/h3&gt;
&lt;p&gt;My favorite talk, because it was a constructive Python critic, with the open source mind as a solution to all of its problems. I don't have to add much more because the slides are easy to be &lt;a href="https://speakerdeck.com/kennethreitz/python-for-humans"&gt;found&lt;/a&gt;. By the way, I also loved the &lt;a href="http://python-guide.org"&gt;The Hitchhikerâ€™s Guide to Python&lt;/a&gt;&lt;/a&gt; project, I think that anyone who wants to get started with Python should take a look at it.&lt;/p&gt;
&lt;h3&gt;How do event loops work in Python?&lt;/h3&gt;
&lt;p&gt;I love Asynchronous Programming, and I love how stupid I feel when I am dealing with it. In this talk, the &lt;a href="http://pyuv.readthedocs.org"&gt;pyuv&lt;/a&gt; was introduced, and it seems really promising. It can be integrated with Twisted and Tornado. Besides that, there was an explanation and comparison of the different event loop libraries.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Believe it or not, this place was an important piece of FOSDEM 2013" src="http://i.imgur.com/pWQSUZk.jpg" /&gt;&lt;/p&gt;</summary><category term="conferences"></category><category term="python"></category><category term="ruby"></category><category term="devops"></category><category term="virtualization"></category><category term="tdd"></category><category term="open-source"></category></entry><entry><title>ApacheCon Europe 2012</title><link href="http://thesoftjaguar.com/posts/2012/11/11/apachecon-europe-2012/" rel="alternate"></link><updated>2012-11-11T20:44:00+01:00</updated><author><name>Dario Blanco</name></author><id>tag:thesoftjaguar.com,2012-11-11:posts/2012/11/11/apachecon-europe-2012/</id><summary type="html">&lt;p&gt;On Wednesday it was ApacheCon day, lot of interesting stuff regarding Apache Lucene, Solr and Elasticsearch. I am not an expert with search engines, and this is a good start for establishing the basic concepts and understanding how some people have solved search problems in their systems.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Captain Obvious strikes again" src="https://pbs.twimg.com/media/A7Fb2aPCAAAtQy2.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;Compound Terms Query Parser for Great Shopping Experience&lt;/h2&gt;
&lt;p&gt;This &lt;a href="http://www.apachecon.eu/schedule/presentation/18/?utm_source=twitter&amp;amp;utm_medium=social&amp;amp;utm_content=79e580ba-95ca-43cb-9739-95693cf4770e"&gt;talk&lt;/a&gt; explained the problem of returning precise search results when there are tricky queries, based on &lt;a href="http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;ved=0CCcQFjAA&amp;amp;url=http%3A%2F%2Flucene.sourceforge.net%2Fpapers%2Friao97.ps&amp;amp;ei=7O-fUPHRLYSh4gTA4IGQCA&amp;amp;usg=AFQjCNF3SmHeiPe-h1A48ztdx8Qx1R-r7w"&gt;Space Optimizations for Total Ranking&lt;/a&gt; paper, and a match spotting using the info explained by the client and facet counts.&lt;/p&gt;
&lt;p&gt;However, there are some queries which are almost impossible to guess, like for example &lt;code&gt;red jeans&lt;/code&gt; in a search system which supports colors, you will have red clothes matches, matches with trademarks whose name contains &lt;code&gt;red&lt;/code&gt; or &lt;code&gt;jeans&lt;/code&gt;. You can minimize the problem, and of course the client only wants exact results, not a huge list of results that he is not going to check, but at the end a nice approach will be less guessing and more freedom to the client in his queries, for instance, specifying if he want to search by color or by trademark.&lt;/p&gt;
&lt;h2&gt;Apache Mahout in context&lt;/h2&gt;
&lt;p&gt;A nice &lt;a href="http://www.apachecon.eu/schedule/presentation/1/"&gt;explanation&lt;/a&gt; of the Apache Mahout project as a data analysis tool, and use cases of what we can do with our huge load of data.&lt;/p&gt;
&lt;p&gt;A good example of this is the &lt;code&gt;Frequently Bought Together&lt;/code&gt; and &lt;code&gt;What Other Items Do Customers Buy After Viewing This Item?&lt;/code&gt; tags in an Amazon product page.&lt;/p&gt;
&lt;h2&gt;Big Search with Big Data Principles&lt;/h2&gt;
&lt;p&gt;Eric presented his &lt;a href="http://www.apachecon.eu/schedule/presentation/13/"&gt;problem&lt;/a&gt;, which consisted in millions of text documents that should be indexed, and they could have really strange formats.&lt;/p&gt;
&lt;p&gt;The solution was nice, applying technologies in which they were familiar with, and then he spoke about &lt;code&gt;Solr4&lt;/code&gt;. We should highlight that &lt;code&gt;Solr&lt;/code&gt; is becoming a noSQL database itself (&lt;code&gt;Elasticsearch&lt;/code&gt; as well), having a key/value store engine, and they used &lt;code&gt;.avro&lt;/code&gt; files for the cache, which was quite interesting.&lt;/p&gt;
&lt;p&gt;Other design choices were &lt;code&gt;ZooKeeper&lt;/code&gt; over &lt;code&gt;NFS&lt;/code&gt;, &lt;code&gt;SCP&lt;/code&gt;, etc.. for sending files between nodes (less error prone and more obvious reasons, &lt;code&gt;ZooKeeper&lt;/code&gt; is powerful), &lt;code&gt;Apache Tika&lt;/code&gt; as a pipeline, handling the errors with an error query, &lt;code&gt;Solrmeter&lt;/code&gt; for monitoring (the central monitoring using &lt;code&gt;Nagios&lt;/code&gt; with the &lt;code&gt;Solr&lt;/code&gt; plugin), a pooled environment (like for example 1 node for development, 6 for production and the rest for load testing) and a &lt;code&gt;Grim Reaper&lt;/code&gt; for restarting instances which are not working as expected.&lt;/p&gt;
&lt;p&gt;In addition, there were some problems which are still present, like the user queries analysis, done with Solrmeter or reading them in an excel file, and the cycle scavenging, which is being done with &lt;code&gt;Condor&lt;/code&gt; but not without complications.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hoffenheim Arena looks good at night" src="http://i.imgur.com/puR3H.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;Solr 4: The SolrCloud Architecture&lt;/h2&gt;
&lt;p&gt;And it was the turn of &lt;a href="http://www.apachecon.eu/schedule/presentation/23/"&gt;showing&lt;/a&gt; how to hack a project that wasn't planned for distributed searching from the beggining, one of the biggest weaknesses in Solr.&lt;/p&gt;
&lt;p&gt;I want to highlight the use of &lt;code&gt;MurmurHash&lt;/code&gt; for assigning the documents to the different shards, &lt;code&gt;ZooKeeper&lt;/code&gt; again (in Elasticsearch this is definitely handled in a nicer way), &lt;code&gt;PeerSync&lt;/code&gt; for data replication and so on, and a last introduction to Netflix child: &lt;code&gt;Chaos Monkey&lt;/code&gt;, used for testing.&lt;/p&gt;
&lt;p&gt;SolrCloud hasn't convinced me, there are some problems when you want to scale the system, because there is a shard limit that you have to set at first, so &lt;code&gt;SolrCloud&lt;/code&gt; will assign a hash range to each shard. There are some hacks for allowing this, like the shard split (so the hash range will be reassigned). That's another problem that we have in Elasticsearch, but the shard arranging is automatic.&lt;/p&gt;
&lt;h2&gt;Personalized Search on the Largest Flash Site in America (Gilt)&lt;/h2&gt;
&lt;p&gt;Another talk regarding a &lt;a href="http://www.apachecon.eu/schedule/presentation/21/"&gt;problem&lt;/a&gt; and how a company has solved it.&lt;/p&gt;
&lt;p&gt;They were using Solr for getting only the items id (&lt;code&gt;skuId&lt;/code&gt; and &lt;code&gt;lookId&lt;/code&gt;), so Solr had only the index. Then, they enriched the search result asking the database for the rest of the params. For being able to do all of this, they created three own plugins for Solr, I didn't like this approach and in one case was a little hacky, but they know better about their own systems and at the end it was working as they expected it to work.&lt;/p&gt;
&lt;p&gt;Like with the first talk, we had the problem of the search query: the product data is not clean, it can have distractive descriptions, poorly named colors and misleading brand names. It was interesting how tricky can be the synonyms if your search engine supports this feature. At the end we have the same conclusion: maybe it is better if you leave that choice to the user for avoiding bad results.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Color names if you are a girl" src="https://pbs.twimg.com/media/A7G74L7CUAU6XLo.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;Battle of the giants: Apache Solr 4.0 vs Elasticsearch&lt;/h2&gt;
&lt;p&gt;The last &lt;a href="http://www.apachecon.eu/schedule/presentation/24/"&gt;talk&lt;/a&gt; was the one in which I put more expectations, and it didn't convince me, maybe because I was hyped.&lt;/p&gt;
&lt;p&gt;It was a brief explanation of each system, which is not bad, but some query examples would have helped a lot. Elasticsearch seemed really promising with the prospective search, nested objects, moving shard and replicas, more indices storage options, index structure and not needing to reload the config. And that's what Solr doesn't have.&lt;/p&gt;
&lt;p&gt;There were also some features supported by both and well, Solr supports multilingual data handling, but is not enough. I really want to try both systems but right now, from the beginning, &lt;code&gt;Elasticsearch&lt;/code&gt; is more interesting for me, especially if I want to have a distributed search environment.&lt;/p&gt;</summary><category term="conferences"></category><category term="elasticsearch"></category><category term="solr"></category><category term="lucene"></category><category term="open-source"></category><category term="big-data"></category><category term="java"></category></entry></feed>