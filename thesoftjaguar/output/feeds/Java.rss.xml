<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>The soft jaguar</title><link>http://thesoftjaguar.com/</link><description></description><atom:link href="http://thesoftjaguar.com/feeds/Java.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 11 Nov 2012 20:44:00 +0100</lastBuildDate><item><title>ApacheCon Europe 2012</title><link>http://thesoftjaguar.com/apachecon-europe-2012.html</link><description>&lt;p&gt;On Wednesday it was ApacheCon day, lot of interesting stuff regarding Apache Lucene, Solr and Elasticsearch. I am not an expert with search engines, and this is a good start for establishing the basic concepts and understanding how some people have solved search problems in their systems.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Captain Obvious strikes again" src="https://pbs.twimg.com/media/A7Fb2aPCAAAtQy2.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;Compound Terms Query Parser for Great Shopping Experience&lt;/h2&gt;
&lt;p&gt;This &lt;a href="http://www.apachecon.eu/schedule/presentation/18/?utm_source=twitter&amp;amp;utm_medium=social&amp;amp;utm_content=79e580ba-95ca-43cb-9739-95693cf4770e"&gt;talk&lt;/a&gt; explained the problem of returning precise search results when there are tricky queries, based on &lt;a href="http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;ved=0CCcQFjAA&amp;amp;url=http%3A%2F%2Flucene.sourceforge.net%2Fpapers%2Friao97.ps&amp;amp;ei=7O-fUPHRLYSh4gTA4IGQCA&amp;amp;usg=AFQjCNF3SmHeiPe-h1A48ztdx8Qx1R-r7w"&gt;Space Optimizations for Total Ranking&lt;/a&gt; paper, and a match spotting using the info explained by the client and facet counts.&lt;/p&gt;
&lt;p&gt;However, there are some queries which are almost impossible to guess, like for example &lt;code&gt;red jeans&lt;/code&gt; in a search system which supports colors, you will have red clothes matches, matches with trademarks whose name contains &lt;code&gt;red&lt;/code&gt; or &lt;code&gt;jeans&lt;/code&gt;. You can minimize the problem, and of course the client only wants exact results, not a huge list of results that he is not going to check, but at the end a nice approach will be less guessing and more freedom to the client in his queries, for instance, specifying if he want to search by color or by trademark.&lt;/p&gt;
&lt;h2&gt;Apache Mahout in context&lt;/h2&gt;
&lt;p&gt;A nice &lt;a href="http://www.apachecon.eu/schedule/presentation/1/"&gt;explanation&lt;/a&gt; of the Apache Mahout project as a data analysis tool, and use cases of what we can do with our huge load of data.&lt;/p&gt;
&lt;p&gt;A good example of this is the &lt;code&gt;Frequently Bought Together&lt;/code&gt; and &lt;code&gt;What Other Items Do Customers Buy After Viewing This Item?&lt;/code&gt; tags in an Amazon product page.&lt;/p&gt;
&lt;h2&gt;Big Search with Big Data Principles&lt;/h2&gt;
&lt;p&gt;Eric presented his &lt;a href="http://www.apachecon.eu/schedule/presentation/13/"&gt;problem&lt;/a&gt;, which consisted in millions of text documents that should be indexed, and they could have really strange formats.&lt;/p&gt;
&lt;p&gt;The solution was nice, applying technologies in which they were familiar with, and then he spoke about &lt;code&gt;Solr4&lt;/code&gt;. We should highlight that &lt;code&gt;Solr&lt;/code&gt; is becoming a noSQL database itself (&lt;code&gt;Elasticsearch&lt;/code&gt; as well), having a key/value store engine, and they used &lt;code&gt;.avro&lt;/code&gt; files for the cache, which was quite interesting.&lt;/p&gt;
&lt;p&gt;Other design choices were &lt;code&gt;ZooKeeper&lt;/code&gt; over &lt;code&gt;NFS&lt;/code&gt;, &lt;code&gt;SCP&lt;/code&gt;, etc.. for sending files between nodes (less error prone and more obvious reasons, &lt;code&gt;ZooKeeper&lt;/code&gt; is powerful), &lt;code&gt;Apache Tika&lt;/code&gt; as a pipeline, handling the errors with an error query, &lt;code&gt;Solrmeter&lt;/code&gt; for monitoring (the central monitoring using &lt;code&gt;Nagios&lt;/code&gt; with the &lt;code&gt;Solr&lt;/code&gt; plugin), a pooled environment (like for example 1 node for development, 6 for production and the rest for load testing) and a &lt;code&gt;Grim Reaper&lt;/code&gt; for restarting instances which are not working as expected.&lt;/p&gt;
&lt;p&gt;In addition, there were some problems which are still present, like the user queries analysis, done with Solrmeter or reading them in an excel file, and the cycle scavenging, which is being done with &lt;code&gt;Condor&lt;/code&gt; but not without complications.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hoffenheim Arena looks good at night" src="http://i.imgur.com/puR3H.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;Solr 4: The SolrCloud Architecture&lt;/h2&gt;
&lt;p&gt;And it was the turn of &lt;a href="http://www.apachecon.eu/schedule/presentation/23/"&gt;showing&lt;/a&gt; how to hack a project that wasn't planned for distributed searching from the beggining, one of the biggest weaknesses in Solr.&lt;/p&gt;
&lt;p&gt;I want to highlight the use of &lt;code&gt;MurmurHash&lt;/code&gt; for assigning the documents to the different shards, &lt;code&gt;ZooKeeper&lt;/code&gt; again (in Elasticsearch this is definitely handled in a nicer way), &lt;code&gt;PeerSync&lt;/code&gt; for data replication and so on, and a last introduction to Netflix child: &lt;code&gt;Chaos Monkey&lt;/code&gt;, used for testing.&lt;/p&gt;
&lt;p&gt;SolrCloud hasn't convinced me, there are some problems when you want to scale the system, because there is a shard limit that you have to set at first, so &lt;code&gt;SolrCloud&lt;/code&gt; will assign a hash range to each shard. There are some hacks for allowing this, like the shard split (so the hash range will be reassigned). That's another problem that we have in Elasticsearch, but the shard arranging is automatic.&lt;/p&gt;
&lt;h2&gt;Personalized Search on the Largest Flash Site in America (Gilt)&lt;/h2&gt;
&lt;p&gt;Another talk regarding a &lt;a href="http://www.apachecon.eu/schedule/presentation/21/"&gt;problem&lt;/a&gt; and how a company has solved it.&lt;/p&gt;
&lt;p&gt;They were using Solr for getting only the items id (&lt;code&gt;skuId&lt;/code&gt; and &lt;code&gt;lookId&lt;/code&gt;), so Solr had only the index. Then, they enriched the search result asking the database for the rest of the params. For being able to do all of this, they created three own plugins for Solr, I didn't like this approach and in one case was a little hacky, but they know better about their own systems and at the end it was working as they expected it to work.&lt;/p&gt;
&lt;p&gt;Like with the first talk, we had the problem of the search query: the product data is not clean, it can have distractive descriptions, poorly named colors and misleading brand names. It was interesting how tricky can be the synonyms if your search engine supports this feature. At the end we have the same conclusion: maybe it is better if you leave that choice to the user for avoiding bad results.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Color names if you are a girl" src="https://pbs.twimg.com/media/A7G74L7CUAU6XLo.jpg" /&gt;&lt;/p&gt;
&lt;h2&gt;Battle of the giants: Apache Solr 4.0 vs Elasticsearch&lt;/h2&gt;
&lt;p&gt;The last &lt;a href="http://www.apachecon.eu/schedule/presentation/24/"&gt;talk&lt;/a&gt; was the one in which I put more expectations, and it didn't convince me, maybe because I was hyped.&lt;/p&gt;
&lt;p&gt;It was a brief explanation of each system, which is not bad, but some query examples would have helped a lot. Elasticsearch seemed really promising with the prospective search, nested objects, moving shard and replicas, more indices storage options, index structure and not needing to reload the config. And that's what Solr doesn't have.&lt;/p&gt;
&lt;p&gt;There were also some features supported by both and well, Solr supports multilingual data handling, but is not enough. I really want to try both systems but right now, from the beginning, &lt;code&gt;Elasticsearch&lt;/code&gt; is more interesting for me, especially if I want to have a distributed search environment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dario Blanco</dc:creator><pubDate>Sun, 11 Nov 2012 20:44:00 +0100</pubDate><guid>tag:thesoftjaguar.com,2012-11-11:apachecon-europe-2012.html</guid><category>conference</category><category>talk</category><category>Apache</category><category>Elasticsearch</category><category>Solr</category><category>Lucene</category><category>Hoffenheim</category><category>Java</category></item><item><title>Hackathon project: Jenkins is calling</title><link>http://thesoftjaguar.com/jenkins-is-calling.html</link><description>&lt;h2&gt;What is a Hackathon?&lt;/h2&gt;
&lt;p&gt;In the company I work for, &lt;a href="http://www.edelight.de/"&gt;edelight&lt;/a&gt;, we have Hackathon days. The idea is to team up with colleagues and work on a project of your choice for one entire day. There are no limitations on what you want to do and at the end of the day you have to present a prototype to all the team. So the last Hackathon was in July and there were a lot of interesting projects, you can always check what is happening in our &lt;a href="http://labs.edelight-group.com/"&gt;team blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Having fun with Jenkins&lt;/h2&gt;
&lt;p&gt;We have a continuous integration server using &lt;a href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt;, with a post-hook to our github repos for tracking the master branch on every project. It is really important for checking if the build is failing in the staging server, and it helps a lot in terms of code quality.&lt;/p&gt;
&lt;p&gt;In my case, I decided to create a really basic Android application, showing an annoying window with a silly background music whenever the Jenkins build is red (failing), or when is switching from the red state to blue (fixed).&lt;/p&gt;
&lt;h2&gt;A technical approach&lt;/h2&gt;
&lt;p&gt;In order to have an asynchronous communication, the Android application is implementing a &lt;a href="http://tools.ietf.org/html/rfc6455"&gt;WebSocket&lt;/a&gt; Java client, subscribed to a &lt;a href="http://www.tornadoweb.org/en/stable/"&gt;Tornado&lt;/a&gt; application that implements the WebSocket server. If you are a bit scared about Tornado, please don't, it is quite easy to create a &lt;a href="http://www.tornadoweb.org/en/stable/websocket.html?highlight=websockets"&gt;WebSocket server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Android app main view" src="http://i.imgur.com/SFpfb.png" /&gt;&lt;/p&gt;
&lt;h2&gt;The push notification&lt;/h2&gt;
&lt;p&gt;Once the client is subscribed, every time a Jenkins build is changing its status to &lt;code&gt;failing&lt;/code&gt; or &lt;code&gt;fixed&lt;/code&gt;, the Tornado app will know it and will send a broadcast message (push message) to all the suscribers. In that case, the Android client (even if it is in sleeping mode), will populate the Activity window in front of all the ones that you had opened before, and an awesome music (copyright free of course) will be played.&lt;/p&gt;
&lt;h2&gt;The build is failing ¬¬&lt;/h2&gt;
&lt;p&gt;When a new commit is pushed into master, Jenkins runs the project tests, code coverage, pep8, pylint... If something is wrong, the build will fail. In that case, the mobile phone will display the TROLOLO window, with the &lt;a href="http://youtu.be/ednKK8GlvwI"&gt;TROLOLO song&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The build is fixed ^^&lt;/h2&gt;
&lt;p&gt;Of course, if the build is failing, someone has to fix it. If a benevolent soul has commited the patch fix into master, Jenkins will pass all the tests again, and it will stop spamming our email accounts. The way in which it stops the spam is quite funny: sending a last email message saying that it is fixed.&lt;/p&gt;
&lt;p&gt;However, I thought that the spam wasn't enough, so in that case, your mobile phone will also display the KEYBOARD CAT window, and the &lt;a href="http://youtu.be/J---aiyznGQ"&gt;KEYBOARD CAT song&lt;/a&gt; as a token of victory.&lt;/p&gt;
&lt;h2&gt;Life's for sharing&lt;/h2&gt;
&lt;p&gt;You can browse the code on &lt;a href="https://github.com/sharkerz/jenkins-calling"&gt;github&lt;/a&gt;. I haven't had a lot of time for developing this, so I haven't cleaned the code a lot (and I'm sharing the client only), but if someone is really interested in it, you can always ping me in twitter or by email.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dario Blanco</dc:creator><pubDate>Tue, 04 Sep 2012 18:59:00 +0200</pubDate><guid>tag:thesoftjaguar.com,2012-09-04:jenkins-is-calling.html</guid><category>hackathon</category><category>Jenkins</category><category>continuous integration</category><category>Android</category><category>Java</category><category>Websocket</category><category>asynchronous</category><category>Tornado</category></item></channel></rss>